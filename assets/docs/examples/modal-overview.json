{
    "angular.json": "{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n        \"project-template\": {\n            \"root\": \"\",\n            \"sourceRoot\": \"src\",\n            \"projectType\": \"application\",\n            \"prefix\": \"app\",\n            \"schematics\": {\n                \"@schematics/angular:component\": {\n                    \"styleext\": \"scss\"\n                }\n            },\n            \"architect\": {\n                \"build\": {\n                    \"builder\": \"@angular-devkit/build-angular:browser\",\n                    \"options\": {\n                        \"outputPath\": \"dist/project-template\",\n                        \"index\": \"src/index.html\",\n                        \"main\": \"src/main.ts\",\n                        \"polyfills\": \"src/polyfills.ts\",\n                        \"tsConfig\": \"src/tsconfig.app.json\",\n                        \"assets\": [\n                            \"src/favicon.ico\",\n                            \"src/assets\"\n                        ],\n                        \"styles\": [\n                            \"src/styles.scss\",\n                            \"./node_modules/@fortawesome/fontawesome-free/css/all.css\"\n                        ]\n                    },\n                    \"configurations\": {\n                        \"production\": {\n                            \"fileReplacements\": [\n                                {\n                                    \"replace\": \"src/environments/environment.ts\",\n                                    \"with\": \"src/environments/environment.prod.ts\"\n                                }\n                            ],\n                            \"optimization\": true,\n                            \"outputHashing\": \"all\",\n                            \"sourceMap\": false,\n                            \"extractCss\": true,\n                            \"namedChunks\": false,\n                            \"aot\": true,\n                            \"extractLicenses\": true,\n                            \"vendorChunk\": false,\n                            \"buildOptimizer\": true,\n                            \"budgets\": [\n                                {\n                                    \"type\": \"initial\",\n                                    \"maximumWarning\": \"2mb\",\n                                    \"maximumError\": \"5mb\"\n                                }\n                            ]\n                        }\n                    }\n                },\n                \"serve\": {\n                    \"builder\": \"@angular-devkit/build-angular:dev-server\",\n                    \"options\": {\n                        \"browserTarget\": \"project-template:build\"\n                    },\n                    \"configurations\": {\n                        \"production\": {\n                            \"browserTarget\": \"project-template:build:production\"\n                        }\n                    }\n                },\n                \"extract-i18n\": {\n                    \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n                    \"options\": {\n                        \"browserTarget\": \"project-template:build\"\n                    }\n                },\n                \"test\": {\n                    \"builder\": \"@angular-devkit/build-angular:karma\",\n                    \"options\": {\n                        \"main\": \"src/test.ts\",\n                        \"polyfills\": \"src/polyfills.ts\",\n                        \"tsConfig\": \"src/tsconfig.spec.json\",\n                        \"karmaConfig\": \"src/karma.conf.js\",\n                        \"styles\": [\n                            \"src/styles.scss\",\n                            \"./node_modules/@fortawesome/fontawesome-free/css/all.css\"\n                        ],\n                        \"scripts\": [],\n                        \"assets\": [\n                            \"src/favicon.ico\",\n                            \"src/assets\"\n                        ]\n                    }\n                },\n                \"lint\": {\n                    \"builder\": \"@angular-devkit/build-angular:tslint\",\n                    \"options\": {\n                        \"tsConfig\": [\n                            \"src/tsconfig.app.json\",\n                            \"src/tsconfig.spec.json\"\n                        ],\n                        \"exclude\": [\n                            \"**/node_modules/**\"\n                        ]\n                    }\n                }\n            }\n        },\n        \"project-template-e2e\": {\n            \"root\": \"e2e/\",\n            \"projectType\": \"application\",\n            \"prefix\": \"\",\n            \"architect\": {\n                \"e2e\": {\n                    \"builder\": \"@angular-devkit/build-angular:protractor\",\n                    \"options\": {\n                        \"protractorConfig\": \"e2e/protractor.conf.js\",\n                        \"devServerTarget\": \"project-template:serve\"\n                    },\n                    \"configurations\": {\n                        \"production\": {\n                            \"devServerTarget\": \"project-template:serve:production\"\n                        }\n                    }\n                },\n                \"lint\": {\n                    \"builder\": \"@angular-devkit/build-angular:tslint\",\n                    \"options\": {\n                        \"tsConfig\": \"e2e/tsconfig.e2e.json\",\n                        \"exclude\": [\n                            \"**/node_modules/**\"\n                        ]\n                    }\n                }\n            }\n        }\n    },\n    \"defaultProject\": \"project-template\"\n}\n",
    "package.json": "{\n    \"name\": \"project-template\",\n    \"version\": \"0.0.0\",\n    \"scripts\": {\n        \"ng\": \"ng\",\n        \"start\": \"ng serve\",\n        \"build\": \"ng build\",\n        \"test\": \"ng test\",\n        \"lint\": \"ng lint\",\n        \"e2e\": \"ng e2e\"\n    },\n    \"private\": true,\n    \"dependencies\": {\n        \"@angular/animations\": \"8.2.14\",\n        \"@angular/common\": \"8.2.14\",\n        \"@angular/compiler\": \"8.2.14\",\n        \"@angular/core\": \"8.2.14\",\n        \"@angular/forms\": \"8.2.14\",\n        \"@angular/platform-browser\": \"8.2.14\",\n        \"@angular/platform-browser-dynamic\": \"8.2.14\",\n        \"@angular/router\": \"8.2.14\",\n        \"core-js\": \"^3.02\",\n        \"rxjs\": \"^6.5.4\",\n        \"zone.js\": \"^0.9.1\",\n        \"@wcf-insurance/cashmere\": \"*\",\n        \"npm-font-open-sans\": \"1.1.0\",\n        \"@angular/cdk\": \"^8.2.3\",\n        \"@fortawesome/fontawesome-free\": \"^5.12.1\"\n    },\n    \"devDependencies\": {\n        \"@angular-devkit/build-angular\": \"~0.10.0\",\n        \"@angular/cli\": \"^8.3.8\",\n        \"@angular/compiler-cli\": \"8.2.14\",\n        \"@angular/language-service\": \"8.2.14\",\n        \"@types/node\": \"9.6.2\",\n        \"@types/jasmine\": \"~2.8.8\",\n        \"@types/jasminewd2\": \"~2.0.3\",\n        \"codelyzer\": \"~4.5.0\",\n        \"jasmine-core\": \"~2.99.1\",\n        \"jasmine-spec-reporter\": \"~4.2.1\",\n        \"karma\": \"~3.0.0\",\n        \"karma-chrome-launcher\": \"~2.2.0\",\n        \"karma-coverage-istanbul-reporter\": \"~2.0.1\",\n        \"karma-jasmine\": \"~1.1.2\",\n        \"karma-jasmine-html-reporter\": \"^0.2.2\",\n        \"protractor\": \"~5.4.0\",\n        \"ts-node\": \"6.1.7\",\n        \"tslint\": \"~5.11.0\",\n        \"typescript\": \"3.5.3\"\n    }\n}\n",
    "src/app/app-routing.module.ts": "import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {ExampleContainerComponent} from './example-container.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ExampleContainerComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n",
    "src/app/app.component.ts": "import {Component, ViewEncapsulation} from '@angular/core';\n\n@Component({\n    selector: 'app-root',\n    template: '<router-outlet></router-outlet>',\n    styleUrls: ['../styles.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent {}\n",
    "src/app/app.module.ts": "import {BrowserModule} from '@angular/platform-browser';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {NgModule} from '@angular/core';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {ExampleContainerComponent} from './example-container.component';\nimport {CashmereModule} from './cashmere.module';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {ModalOverviewExampleModule} from './modal-overview/modal-overview-example.module';\n\n@NgModule({\n    declarations: [AppComponent, ExampleContainerComponent],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        AppRoutingModule,\n        CashmereModule,\n        ModalOverviewExampleModule\n    ],\n    providers: [],\n    entryComponents: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {}\n",
    "src/app/cashmere.module.ts": "import {NgModule} from '@angular/core';\nimport {\n    AddressModule,\n    AccordionModule,\n    ActionBarModule,\n    AppSwitcherModule,\n    BannerModule,\n    BreadcrumbsModule,\n    BusyIndicatorModule,\n    ButtonModule,\n    CheckboxModule,\n    ChipModule,\n    DatepickerModule,\n    DateRangeModule,\n    DialogModule,\n    DrawerModule,\n    EnvironmentRibbonModule,\n    FileInputModule,\n    FormFieldModule,\n    HeaderModule,\n    IconModule,\n    InputModule,\n    ListModule,\n    ModalModule,\n    MultiSelectPickerModule,\n    NavbarModule,\n    PaginationModule,\n    PicklistModule,\n    PipesModule,\n    PopModule,\n    ProgressBarModule,\n    ProgressIndicatorsModule,\n    RadioButtonModule,\n    ScrollNavModule,\n    RequirementModule,\n    SelectModule,\n    SliderModule,\n    SidenavModule,\n    SortModule,\n    SubnavModule,\n    TableModule,\n    TabsModule,\n    TileModule,\n    ToasterModule,\n    ToggleSwitchModule,\n    TypeaheadModule,\n    TypeaheadTitleModule,\n    TypeformSurveyModule,\n    WcfTabsModule,\n    XanthosFileUploadModule\n} from '@wcf-insurance/cashmere';\n\n@NgModule({\n    exports: [\n        AddressModule,\n        AccordionModule,\n        ActionBarModule,\n        AppSwitcherModule,\n        BreadcrumbsModule,\n        BannerModule,\n        ButtonModule,\n        BusyIndicatorModule,\n        CheckboxModule,\n        ChipModule,\n        DatepickerModule,\n        DateRangeModule,\n        DialogModule,\n        DrawerModule,\n        EnvironmentRibbonModule,\n        FileInputModule,\n        FormFieldModule,\n        HeaderModule,\n        IconModule,\n        InputModule,\n        ListModule,\n        ModalModule,\n        MultiSelectPickerModule,\n        NavbarModule,\n        PaginationModule,\n        PicklistModule,\n        PipesModule,\n        PopModule,\n        ProgressBarModule,\n        ProgressIndicatorsModule,\n        RadioButtonModule,\n        RequirementModule,\n        ScrollNavModule,\n        SelectModule,\n        SliderModule,\n        SidenavModule,\n        SortModule,\n        SubnavModule,\n        TableModule,\n        TabsModule,\n        TileModule,\n        ToasterModule,\n        ToggleSwitchModule,\n        TypeaheadModule,\n        TypeaheadTitleModule,\n        TypeformSurveyModule,\n        WcfTabsModule,\n        XanthosFileUploadModule\n    ]\n})\nexport class CashmereModule {}\n",
    "src/app/example-container.component.ts": "import {Component} from '@angular/core';\n\n@Component({\n    selector: 'app-example-container',\n    template: '<hc-example></hc-example>'\n})\nexport class ExampleContainerComponent {}\n",
    "src/assets/.gitkeep": "",
    "src/browserslist": "# This file is currently used by autoprefixer to adjust CSS to support the below specified browsers\n# For additional information regarding the format and rule options, please see:\n# https://github.com/browserslist/browserslist#queries\n#\n# For IE 9-11 support, please remove 'not' from the last line of the file and adjust as needed\n\n> 0.5%\nlast 2 versions\nFirefox ESR\nnot dead\nnot IE 9-11",
    "src/environments/environment.prod.ts": "export const environment = {\n    production: true\n};\n",
    "src/environments/environment.ts": "// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n",
    "src/index.html": "<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>ProjectTemplate</title>\n  <base href=\"/\">\n\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n</head>\n<body>\n  <app-root></app-root>\n</body>\n</html>\n",
    "src/main.ts": "import {enableProdMode} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\n\nimport {AppModule} from './app/app.module';\nimport {environment} from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .catch(err => console.error(err));\n",
    "src/polyfills.ts": "/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/docs/ts/latest/guide/browser-support.html\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\n// import 'core-js/es/symbol';\nimport 'core-js/es/object';\n// import 'core-js/es/function';\n// import 'core-js/es/parse-int';\n// import 'core-js/es/parse-float';\n// import 'core-js/es/number';\n// import 'core-js/es/math';\nimport 'core-js/es/string';\n// import 'core-js/es/date';\nimport 'core-js/es/array';\n/** Evergreen browsers require these. **/\n// Used for reflect-metadata in JIT. If you use AOT (and only Angular decorators), you can remove.\nimport 'core-js/es/reflect';\n/***************************************************************************************************\n * Zone JS is required by default for Angular itself.\n */\nimport 'zone.js/dist/zone'; // Included with Angular CLI.\n// import 'core-js/es/regexp';\n// import 'core-js/es/map';\n// import 'core-js/es/weak-map';\n// import 'core-js/es/set';\n\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\n\n/** IE10 and IE11 requires the following for the Reflect API. */\n// import 'core-js/proposals/reflect-metadata';\n\n/**\n * Web Animations `@angular/platform-browser/animations`\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\n **/\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n/**\n * By default, zone.js will patch all possible macroTask and DomEvents\n * user can disable parts of macroTask/DomEvents patch by setting following flags\n */\n\n// (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\n// (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\n// (window as any).__zone_symbol__BLACK_LISTED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\n\n/*\n * in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\n * with the following flag, it will bypass `zone.js` patch for IE/Edge\n */\n// (window as any).__Zone_enable_cross_context_check = true;\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n",
    "src/styles.scss": "$FontPathOpenSans: 'node_modules/npm-font-open-sans/fonts';\n@import '~npm-font-open-sans/open-sans';\n\n@import '~@wcf-insurance/cashmere/scss/cashmere';\n",
    "src/tsconfig.app.json": "{\n    \"extends\": \"../tsconfig.json\",\n    \"compilerOptions\": {\n        \"outDir\": \"../out-tsc/app\",\n        \"types\": []\n    },\n    \"exclude\": [\"test.ts\", \"**/*.spec.ts\"]\n}\n",
    "tsconfig.json": "{\n    \"compileOnSave\": false,\n    \"compilerOptions\": {\n        \"baseUrl\": \"./\",\n        \"outDir\": \"./dist/out-tsc\",\n        \"sourceMap\": true,\n        \"declaration\": false,\n        \"module\": \"es2015\",\n        \"moduleResolution\": \"node\",\n        \"emitDecoratorMetadata\": true,\n        \"experimentalDecorators\": true,\n        \"target\": \"es5\",\n        \"typeRoots\": [\"node_modules/@types\"],\n        \"lib\": [\"es2018\", \"dom\"]\n    }\n}\n",
    "src/app/modal-overview/modal-overview-example-modal.component.html": "<hc-modal>\n    <hc-modal-header>Modal Header Title</hc-modal-header>\n    <hc-modal-body>Data: {{ activeModal.data }}</hc-modal-body>\n    <hc-modal-footer>\n        <button hc-button buttonStyle=\"link\" (click)=\"cancel()\">Cancel</button>\n        <button hc-button buttonStyle=\"primary\" (click)=\"close()\">Ok</button>\n    </hc-modal-footer>\n</hc-modal>\n",
    "src/app/modal-overview/modal-overview-example-modal.component.ts": "import {Component} from '@angular/core';\nimport {ActiveModal} from '@wcf-insurance/cashmere';\n\n@Component({\n    selector: 'hc-modal-overview-example-modal',\n    templateUrl: 'modal-overview-example-modal.component.html'\n})\nexport class ModalOverviewExampleModalComponent {\n    constructor(public activeModal: ActiveModal) {}\n\n    close() {\n        this.activeModal.close();\n    }\n\n    cancel() {\n        this.activeModal.dismiss();\n    }\n}\n",
    "src/app/modal-overview/modal-overview-example.component.html": "<ng-template #basicTemplate let-close=\"close\" let-dismiss=\"dismiss\" let-data=\"data\">\n    <hc-modal>\n        <hc-modal-header>Modal Title</hc-modal-header>\n        <hc-modal-body>Data: {{ data }}</hc-modal-body>\n        <hc-modal-footer>\n            <button hc-button buttonStyle=\"link\" (click)=\"dismiss()\">Cancel</button>\n            <button hc-button buttonStyle=\"primary\" (click)=\"close()\">OK</button>\n        </hc-modal-footer>\n    </hc-modal>\n</ng-template>\n\n<ng-template #templateWithOnlyCloseButton let-close=\"close\" let-dismiss=\"dismiss\" let-data=\"data\">\n    <hc-modal>\n        <hc-modal-header>\n            Coverage Table\n            <hc-icon fontSet=\"fa\" fontIcon=\"fa-times-circle\" hcIconMd (click)=\"close()\"></hc-icon>\n        </hc-modal-header>\n        <hc-modal-body>\n            <div class=\"description\">Below is a reference table for coverages and their various reasons.</div>\n            <div class=\"coverage-table\">\n                <div class=\"table-header\">\n                    <div class=\"column-title\">Coverage</div>\n                    <div class=\"column-title\">Reason</div>\n                </div>\n                <div class=\"table-body\">\n                    <div class=\"table-row\">\n                        <div class=\"coverage-pill\">\n                            <div class=\"pill gl\">GL</div>\n                        </div>\n                        <div class=\"reason\">Different Company</div>\n                    </div>\n                    <div class=\"table-row\">\n                        <div class=\"coverage-pill\">\n                            <div class=\"pill wc\">WC</div>\n                        </div>\n                        <div class=\"reason\">Different Company</div>\n                    </div>\n                    <div class=\"table-row\">\n                        <div class=\"pill u\">U</div>\n                        <div class=\"reason\">Different Producer</div>\n                    </div>\n                    <div class=\"table-row\">\n                        <div class=\"pill a\">A</div>\n                        <div class=\"reason\">Different Producer Contact</div>\n                    </div>\n                </div>\n            </div>\n        </hc-modal-body>\n    </hc-modal>\n</ng-template>\n\n<ng-template #formTemplate let-close=\"close\" let-dismiss=\"dismiss\" let-data=\"data\">\n    <hc-modal class=\" hc-modal-md form-example\">\n        <hc-modal-header>Filter Options</hc-modal-header>\n        <hc-modal-body [formGroup]=\"form\">\n            <div class=\"coverage-year form-item\">\n                <div class=\"form-item-label\">Coverage Year</div>\n                <div class=\"year-options\">\n                    <hc-checkbox checked=\"true\" (change)=\"yearClicked($event, 2019)\">2019</hc-checkbox>\n                    <hc-checkbox checked=\"true\" (change)=\"yearClicked($event, 2018)\">2018</hc-checkbox>\n                    <hc-checkbox checked=\"true\" (change)=\"yearClicked($event, 2017)\">2017</hc-checkbox>\n                    <hc-checkbox (change)=\"yearClicked($event, 2016)\">2016</hc-checkbox>\n                </div>\n            </div>\n            <div class=\"coverage form-item\">\n                <div class=\"form-item-label\">Coverage</div>\n                <div class=\"coverage-options\">\n                    <div class=\"pill gl\">GL</div>\n                    <div class=\"pill a\">A</div>\n                    <div class=\"pill u\">U</div>\n                    <div class=\"pill wc\">WC</div>\n                </div>\n            </div>\n            <div class=\"policy-period form-item\">\n                <div class=\"form-item-label\">Location *</div>\n                <div class=\"period-options\">\n                    <hc-form-field>\n                        <hc-select placeholder=\"Select a city:\" formControlName=\"location\">\n                            <option value=\"1\">Philadelphia</option>\n                            <option value=\"2\">Atlanta</option>\n                            <option value=\"3\">Salt Lake City</option>\n                            <option value=\"4\">Chicago</option>\n                            <option value=\"5\">Orlando</option>\n                        </hc-select>\n                    </hc-form-field>\n                </div>\n            </div>\n            <div class=\"form-item\">\n                <div class=\"form-item-label\">Date *</div>\n                <div>\n                    <hc-form-field>\n                        <input hcInput [hcDatepicker]=\"datePicker\" formControlName=\"date\" placeholder=\"Select date...\" />\n                        <hc-datepicker-toggle hcSuffix [for]=\"datePicker\"></hc-datepicker-toggle>\n                        <hc-datepicker #datePicker></hc-datepicker>\n                        <hc-error class=\"margin-small\">Please enter a valid date</hc-error>\n                    </hc-form-field>\n                </div>\n            </div>\n        </hc-modal-body>\n        <hc-modal-footer>\n            <button hc-button buttonStyle=\"link\" (click)=\"dismiss()\">Cancel</button>\n            <button hc-button buttonStyle=\"primary\" (click)=\"close()\" [disabled]=\"!form.valid\">Apply Changes</button>\n        </hc-modal-footer>\n    </hc-modal>\n</ng-template>\n\n<ng-template #contentTemplate let-close=\"close\" let-dismiss=\"dismiss\" let-data=\"data\">\n    <hc-modal class=\" hc-modal-md form-example\">\n        <hc-modal-header>Scrolling Content</hc-modal-header>\n        <hc-modal-body>\n            <div *ngFor=\"let i of [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\">\n                <p>\n                    Paragraph {{ i }}. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis semper nisl nec ante tincidunt\n                    porttitor. In luctus pharetra pretium. Duis semper nulla a quam porta, non eleifend nisi consequat. Nullam malesuada\n                    posuere lorem, non dapibus diam accumsan condimentum. In ornare imperdiet vestibulum. Etiam condimentum cursus dui eu\n                    sollicitudin. Phasellus id enim fringilla, auctor nisl vitae, laoreet lectus.\n                </p>\n            </div>\n        </hc-modal-body>\n        <hc-modal-footer>\n            <button hc-button buttonStyle=\"primary\" (click)=\"dismiss()\">Close</button>\n        </hc-modal-footer>\n    </hc-modal>\n</ng-template>\n\n<button hc-button buttonStyle=\"secondary\" (click)=\"open()\" class=\"demo-button\">\n    Open Large Modal from Component\n</button>\n<button hc-button buttonStyle=\"secondary\" (click)=\"openTemplate(basicTemplate)\" class=\"demo-button\">\n    Open Auto-Sized Modal from Template\n</button>\n<button hc-button buttonStyle=\"secondary\" (click)=\"openTemplate(templateWithOnlyCloseButton)\" class=\"demo-button\">\n    Modal with only close icon\n</button>\n<button hc-button buttonStyle=\"secondary\" (click)=\"openFormModal(formTemplate)\" class=\"demo-button\">\n    Modal with a form\n</button>\n\n<button hc-button buttonStyle=\"secondary\" (click)=\"openContentModal(contentTemplate)\" class=\"demo-button\">\n    Modal with a lot of content\n</button>\n",
    "src/app/modal-overview/modal-overview-example.component.scss": ".pill {\n    width: 50px;\n    height: 28px;\n    border-radius: 16px;\n    line-height: 2;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: white;\n    &.gl {\n        background-color: #97d2ce;\n    }\n    &.wc {\n        background-color: #0d1241;\n    }\n    &.u {\n        background-color: #254995;\n    }\n    &.a {\n        background-color: #40abd0;\n    }\n}\n\n.description {\n    margin-bottom: 38px;\n}\n\n.table-header {\n    font-size: 16px;\n    font-weight: 500;\n    color: #406181;\n    width: 100%;\n    padding-left: 16px;\n    padding-right: 16px;\n    border-bottom: 1px solid black;\n}\n\n.table-header,\n.table-row {\n    height: 48px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n.table-row {\n    font-size: 14px;\n    font-family: Roboto;\n    padding-left: 16px;\n    padding-right: 16px;\n}\n.table-row:nth-child(even) {\n    background-color: #f6f7f7;\n}\n\n.reason {\n    color: #363e44;\n}\n\n.form-example {\n    .form-item {\n        display: flex;\n        margin-bottom: 33px;\n        &.policy-period {\n            margin-bottom: 0;\n        }\n    }\n    .form-item-label {\n        min-width: 110px;\n        margin-bottom: 10px;\n    }\n    .year-options {\n        display: grid;\n        grid-template-columns: auto auto;\n        grid-column-gap: 40px;\n        grid-row-gap: 24px;\n    }\n    .coverage-options {\n        display: flex;\n        .pill {\n            margin-right: 4px;\n        }\n    }\n}\n",
    "src/app/modal-overview/modal-overview-example.component.ts": "import {CheckboxChangeEvent, HcModal, ModalOptions, ModalService} from '@wcf-insurance/cashmere';\nimport {Component, OnInit, TemplateRef} from '@angular/core';\nimport {ModalOverviewExampleModalComponent} from './modal-overview-example-modal.component';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\n\n/**\n * @title Modal overview\n */\n@Component({\n    selector: 'hc-modal-overview-example',\n    templateUrl: 'modal-overview-example.component.html',\n    styleUrls: ['modal-overview-example.component.scss']\n})\nexport class ModalOverviewExampleComponent implements OnInit {\n    result: any;\n    form: FormGroup;\n\n    constructor(private modalService: ModalService, private fb: FormBuilder) {}\n\n    ngOnInit() {\n        this.form = this.fb.group({\n            year: [[2019, 2018, 2017]],\n            coverage: [''],\n            location: ['', Validators.required],\n            date: ['', Validators.required]\n        });\n\n        this.form.valueChanges.subscribe(value => {\n            console.log(value);\n        });\n    }\n\n    open() {\n        let options: ModalOptions = {\n            data: 'I got this data from the class that opened me',\n            ignoreEscapeKey: true,\n            ignoreOverlayClick: true,\n            size: 'lg'\n        };\n        let subModal: HcModal<ModalOverviewExampleModalComponent> = this.modalService.open(ModalOverviewExampleModalComponent, options);\n        subModal.result.subscribe(res => (this.result = res));\n    }\n\n    openTemplate(content: TemplateRef<any>) {\n        let options: ModalOptions = {\n            data: 'I got this data from the class that opened me (Template version)'\n        };\n        this.modalService.open(content, options);\n    }\n\n    openFormModal(content: TemplateRef<any>) {\n        let options: ModalOptions = {\n            ignoreEscapeKey: true,\n            ignoreOverlayClick: true,\n            size: 'md'\n        };\n        let subModal: HcModal<ModalOverviewExampleModalComponent> = this.modalService.open(content, options);\n        subModal.result.subscribe(res => {\n            this.result = res;\n            alert(\n                `\nForm Value:\n${JSON.stringify(this.form.value, null, 2)}\n`\n            );\n        });\n    }\n\n    openContentModal(content: TemplateRef<any>) {\n        let options: ModalOptions = {\n            ignoreEscapeKey: true,\n            ignoreOverlayClick: true,\n            size: 'lg'\n        };\n        this.modalService.open(content, options);\n    }\n\n    yearClicked(event: CheckboxChangeEvent, itemId) {\n        if (event.checked) {\n            this.form.controls.year.setValue([...this.form.controls.year.value, itemId]);\n        } else {\n            this.form.controls.year.setValue([...this.form.controls.year.value.filter(item => item !== itemId)]);\n        }\n    }\n}\n",
    "src/app/modal-overview/modal-overview-example.module.ts": "import {NgModule} from '@angular/core';\nimport {ModalOverviewExampleComponent} from './modal-overview-example.component';\nimport {ModalOverviewExampleModalComponent} from './modal-overview-example-modal.component';\nimport {CashmereModule} from '../cashmere.module';\nimport {CommonModule} from '@angular/common';\nimport {ReactiveFormsModule} from '@angular/forms';\n\n@NgModule({\n    imports: [CommonModule, CashmereModule, ReactiveFormsModule],\n    declarations: [ModalOverviewExampleComponent, ModalOverviewExampleModalComponent],\n    entryComponents: [ModalOverviewExampleComponent, ModalOverviewExampleModalComponent]\n})\nexport class ModalOverviewExampleModule {}\n"
}
